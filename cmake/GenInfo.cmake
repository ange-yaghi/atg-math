set(header_template "${CMAKE_CURRENT_LIST_DIR}/information.h.in")
set(source_template "${CMAKE_CURRENT_LIST_DIR}/information.cpp.in")

# Create an object library containing the project version in a namespace
# of the project name.
function(gen_info target_name)

    # The project namespace is the same name as the project with the '-'
    # replaced with '_'
    string(REPLACE "-" "_" CXX_NAMESPACE "${PROJECT_NAME}")

    message(STATUS "Generating version information")
    message(STATUS "Target:    ${target_name}")
    message(STATUS "Namespace: ${CXX_NAMESPACE}")

    # Sources generated by this function will live in the binary directory
    # at the gen_info location to prevent collisions with other files generted
    # by CMake. All subfolders must exist for the generation to succeed.
    set(GENERATED_OUTPUT "${CMAKE_BINARY_DIR}/gen_info")
    file(MAKE_DIRECTORY "${GENERATED_OUTPUT}/${PROJECT_NAME}")
    file(MAKE_DIRECTORY "${GENERATED_OUTPUT}")

    # Generate the out files
    set(header_out "${GENERATED_OUTPUT}/${PROJECT_NAME}/information.h")
    set(source_out "${GENERATED_OUTPUT}/information.cpp")
    configure_file("${header_template}" "${header_out}" @ONLY)
    configure_file("${source_template}" "${source_out}" @ONLY)

    # Create an object library so it can be combined with static libraries.
    add_library(${target_name} OBJECT
        "${header_out}"
        "${source_out}"
    )

    target_include_directories(${target_name}
        PUBLIC
            ${GENERATED_OUTPUT}
    )

    set_property(TARGET ${target_name} PROPERTY FOLDER "ver-info")
endfunction()